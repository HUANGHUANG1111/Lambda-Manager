<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    
                    
                    >
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FFA79175" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DarkThemeBackground" Color="#252526" />

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ccc" Offset="0.0"/>
                <GradientStop Color="#555" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItemBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#555" Offset="0.0"/>
                <GradientStop Color="#252526" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GRAY" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="1" Color="#BBBBBB"></GradientStop>
            <GradientStop Offset="0" Color="#000000"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <!-- ToggleButton-->
    <Style  x:Key="ToggleButton" TargetType="{x:Type ToggleButton}" >

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="ButtonBase"  >
                    <Grid>
                        <Border 
        x:Name="Border"  
        CornerRadius="5" 
        BorderThickness="2.5"
        BorderBrush="#FF8E8A8A"  Background="#FF4C4A4A">
                            <ContentPresenter  x:Name="cont" 
          Margin="{TemplateBinding Button.Padding}"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          RecognizesAccessKey="True" 
         />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted" Value="true">

                            <Setter TargetName="Border" Property="BorderBrush"  Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF6EB355</SolidColorBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="False">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFC5BCBC"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>


                        <Trigger Property="ToggleButton.IsChecked" >
                            <Setter Property="Background" TargetName="Border" Value="#FF6EB355"/>
                            <Setter Property="Border.BorderBrush" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFF9F3F3"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextBlock.Background"  TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush>white</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextBlock.Foreground"  TargetName="cont">
                                <Setter.Value>
                                    <SolidColorBrush>white</SolidColorBrush>
                                </Setter.Value>
                            </Setter>

                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Button-->
    <Style  x:Key="ButtonStyle" TargetType="{x:Type Button}" >

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="Border"  CornerRadius="2"  BorderThickness="1" Background="{StaticResource NormalBorderBrush}" BorderBrush="{StaticResource DarkThemeBackground}">
                        <ContentPresenter  Margin="{TemplateBinding Button.Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">

                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"  Value="{StaticResource DarkBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF6EB355</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBorderBrush}" />
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>White</SolidColorBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF6EB355" />
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>white</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                           

                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"  />
                            <Setter TargetName="Border" Property="BorderBrush"  Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--updown-->
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Width" Value="20"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="-0.5"  Background="#444444">
                        <Rectangle Name="Border" StrokeThickness="0" Stroke="#444444" 
                     Fill="#444444">

                        </Rectangle>

                        <ContentPresenter  HorizontalAlignment="Center" x:Name="path1" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style  x:Key="updown" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="SmallChange" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0"  CornerRadius="3,0,0,3" BorderThickness="3" BorderBrush="#444444">
                            <TextBox  Foreground="White" VerticalAlignment="Center"  Background="#444444" Height="Auto" 
                                Margin="-1" Padding="15,0,0,0" VerticalContentAlignment="Center" BorderBrush="#444444" BorderThickness="0"
                               
                                Text="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay,StringFormat='F2'}">
                                <TextBox.InputBindings>
                                    <KeyBinding Gesture="Up" Command="{x:Static Slider.IncreaseSmall}" Key="Up" />
                                    <KeyBinding Gesture="Down" Command="{x:Static Slider.DecreaseSmall}"  />
                                    <KeyBinding Gesture="PageUp" Command="{x:Static Slider.IncreaseLarge}" />
                                    <KeyBinding Gesture="PageDown" Command="{x:Static Slider.DecreaseLarge}" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </Border>
                        <Border Grid.Row="0" Name="borderUp" Grid.Column="1" CornerRadius="0,3,3,0" BorderBrush="#444444" BorderThickness="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <RepeatButton Name="RepeatUp" Grid.Row="0" Background="#595959" BorderThickness="0"
                                    Command="{x:Static Slider.IncreaseSmall}"
                                    Style="{StaticResource RepeatButtonStyle}">
                                    <Path Data="M0,3 L6,-1 12,3 " Fill="Transparent" StrokeThickness="1" Stroke="White" VerticalAlignment="Bottom" Name="PathUp" >

                                    </Path>
                                </RepeatButton>
                                <RepeatButton  Grid.Row="1" Name="RepeatDown" BorderThickness="0"   BorderBrush="#444444"
                                    Command="{x:Static Slider.DecreaseSmall}"
                                    Style="{StaticResource RepeatButtonStyle}">
                                    <Path Data="M0,0 L6,4 12,0 " Name="PathDown" StrokeThickness="1" Fill="Transparent"  Stroke="White"   >
                                    </Path>
                                </RepeatButton>
                            </Grid>

                        </Border>

                        <Border x:Name="TrackBackground" Visibility="Collapsed">
                            <Rectangle x:Name="PART_SelectionRange" Visibility="Collapsed" />
                        </Border>
                        <Thumb x:Name="Thumb" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True" SourceName="RepeatDown">
                            <Setter Property="Stroke" TargetName="PathDown" Value="black" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True" SourceName="RepeatUp">
                            <Setter Property="Stroke" TargetName="PathUp" Value="black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="RepeatUp">
                            <Setter Property="Stroke" TargetName="PathUp" Value= "#70AD47" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="RepeatDown">
                            <Setter Property="Stroke" TargetName="PathDown" Value= "#70AD47" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>